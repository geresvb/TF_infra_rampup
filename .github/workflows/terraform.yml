name: Terraform Apply

on:
  #push:
    #branches:
      #- main  # Runs on push to main branch
  workflow_dispatch:  # Allows manual execution


jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Get GitHub Runner Registration Tokens
        id: get_tokens
        run: |
          BACKEND_REPO="geresvb/backendrampup"
          FRONTEND_REPO="geresvb/frontendrampup"
      
          BACKEND_TOKEN=$(curl -s -X POST -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            https://api.github.com/repos/$BACKEND_REPO/actions/runners/registration-token | jq -r .token)
      
          FRONTEND_TOKEN=$(curl -s -X POST -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
            https://api.github.com/repos/$FRONTEND_REPO/actions/runners/registration-token | jq -r .token)
      
          echo "BACKEND_TOKEN=$BACKEND_TOKEN" >> $GITHUB_ENV
          echo "FRONTEND_TOKEN=$FRONTEND_TOKEN" >> $GITHUB_ENV
      
          echo "backend_token=$BACKEND_TOKEN" >> $GITHUB_OUTPUT
          echo "frontend_token=$FRONTEND_TOKEN" >> $GITHUB_OUTPUT


          
#      - name: Get GitHub Runner Registration Tokens
#        id: get_tokens
#        run: |
#          BACKEND_REPO="geresvb/backendrampup"
#          FRONTEND_REPO="geresvb/frontendrampup"
      
#          BACKEND_TOKEN=$(curl -s -X POST -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
#            https://api.github.com/repos/$BACKEND_REPO/actions/runners/registration-token | jq -r .token)
#      
#          FRONTEND_TOKEN=$(curl -s -X POST -H "Authorization: token ${{ secrets.GH_TOKEN }}" \
#            https://api.github.com/repos/$FRONTEND_REPO/actions/runners/registration-token | jq -r .token)
      
#          echo "backend_token=$BACKEND_TOKEN" >> $GITHUB_OUTPUT
#          echo "frontend_token=$FRONTEND_TOKEN" >> $GITHUB_OUTPUT


      - name: Terraform Init
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_db_ssh_public_key: "${{ secrets.DB_SSH_PUBLIC_KEY }}"
          TF_VAR_backend_ssh_public_key: "${{ secrets.BACKEND_SSH_PUBLIC_KEY }}"
          TF_VAR_frontend_ssh_public_key: "${{ secrets.FRONTEND_SSH_PUBLIC_KEY }}"
          TF_VAR_management_ssh_public_key: "${{ secrets.MANAGEMENT_SSH_PUBLIC_KEY }}"
          TF_VAR_backend_runner_token: ${{ steps.get_tokens.outputs.backend_token }}
          TF_VAR_frontend_runner_token: ${{ steps.get_tokens.outputs.frontend_token }}

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_db_ssh_public_key: "${{ secrets.DB_SSH_PUBLIC_KEY }}"
          TF_VAR_backend_ssh_public_key: "${{ secrets.BACKEND_SSH_PUBLIC_KEY }}"
          TF_VAR_frontend_ssh_public_key: "${{ secrets.FRONTEND_SSH_PUBLIC_KEY }}"
          TF_VAR_management_ssh_public_key: "${{ secrets.MANAGEMENT_SSH_PUBLIC_KEY }}"
          TF_VAR_backend_runner_token: ${{ steps.get_tokens.outputs.backend_token }}
          TF_VAR_frontend_runner_token: ${{ steps.get_tokens.outputs.frontend_token }}
          
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_db_ssh_public_key: "${{ secrets.DB_SSH_PUBLIC_KEY }}"
          TF_VAR_backend_ssh_public_key: "${{ secrets.BACKEND_SSH_PUBLIC_KEY }}"
          TF_VAR_frontend_ssh_public_key: "${{ secrets.FRONTEND_SSH_PUBLIC_KEY }}"
          TF_VAR_management_ssh_public_key: "${{ secrets.MANAGEMENT_SSH_PUBLIC_KEY }}"
          TF_VAR_backend_runner_token: ${{ steps.get_tokens.outputs.backend_token }}
          TF_VAR_frontend_runner_token: ${{ steps.get_tokens.outputs.frontend_token }}

      - name: Show API-created Runner Tokens (debug only!)
        run: |
          echo "Backend token: ${{ steps.get_tokens.outputs.backend_token }}"
          echo "Frontend token: ${{ steps.get_tokens.outputs.frontend_token }}"


