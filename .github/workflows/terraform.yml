name: Terraform Apply

on:
  #push:
    #branches:
      #- main  # Runs on push to main branch
  workflow_dispatch:  # Allows manual execution


jobs:
  terraform:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0

      - name: Terraform Init
        run: terraform init
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_db_ssh_public_key: "${{ secrets.DB_SSH_PUBLIC_KEY }}"
          TF_VAR_backend_ssh_public_key: "${{ secrets.BACKEND_SSH_PUBLIC_KEY }}"
          TF_VAR_frontend_ssh_public_key: "${{ secrets.FRONTEND_SSH_PUBLIC_KEY }}"
          TF_VAR_management_ssh_public_key: "${{ secrets.MANAGEMENT_SSH_PUBLIC_KEY }}"

      - name: Terraform Plan
        run: terraform plan -out=tfplan
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_db_ssh_public_key: "${{ secrets.DB_SSH_PUBLIC_KEY }}"
          TF_VAR_backend_ssh_public_key: "${{ secrets.BACKEND_SSH_PUBLIC_KEY }}"
          TF_VAR_frontend_ssh_public_key: "${{ secrets.FRONTEND_SSH_PUBLIC_KEY }}"
          TF_VAR_management_ssh_public_key: "${{ secrets.MANAGEMENT_SSH_PUBLIC_KEY }}"
  
      - name: Terraform Apply Public IP
        run: terraform apply -target=azurerm_public_ip.lb_public_ip -auto-approve
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_db_ssh_public_key: "${{ secrets.DB_SSH_PUBLIC_KEY }}"
          TF_VAR_backend_ssh_public_key: "${{ secrets.BACKEND_SSH_PUBLIC_KEY }}"
          TF_VAR_frontend_ssh_public_key: "${{ secrets.FRONTEND_SSH_PUBLIC_KEY }}"
          TF_VAR_management_ssh_public_key: "${{ secrets.MANAGEMENT_SSH_PUBLIC_KEY }}"
          
      - name: Get LoadBalancer Public IP
        id: tf_output
        run: |
          IP=$(terraform output -raw LoadBalancerIP | head -n 1)
          echo "LoadBalancerIP: $IP"
          echo "TF_PUBLIC_IP=$IP" >> $GITHUB_ENV
          echo "public_ip=$IP" >> $GITHUB_OUTPUT
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          
      - name: Try to Create PUBLIC_IP Variable in backend (safe to fail)
        continue-on-error: true
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/geresvb/backendrampup/actions/variables \
            -d '{"name":"PUBLIC_IP","value":"${{ steps.tf_output.outputs.public_ip }}"}'
            
      - name: Try to Create PUBLIC_IP Variable in frontend (safe to fail)
        continue-on-error: true
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/geresvb/frontendrampup/actions/variables \
            -d '{"name":"PUBLIC_IP","value":"${{ steps.tf_output.outputs.public_ip }}"}'

      - name: Update PUBLIC_IP Variable in backend repo
        run: |
          curl -X PATCH \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/geresvb/backendrampup/actions/variables/PUBLIC_IP \
            -d '{"name":"PUBLIC_IP","value":"${{ steps.tf_output.outputs.public_ip }}"}'
            
      - name: Update PUBLIC_IP Variable in frontend repo
        run: |
          curl -X PATCH \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            -H "Accept: application/vnd.github+json" \
            https://api.github.com/repos/geresvb/frontendrampup/actions/variables/PUBLIC_IP \
            -d '{"name":"PUBLIC_IP","value":"${{ steps.tf_output.outputs.public_ip }}"}'
            
      - name: Trigger workflow in backendrampup (env regeneration)
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            https://api.github.com/repos/geresvb/backendrampup/dispatches \
            -d '{"event_type":"update-env"}
            
      - name: Trigger workflow in backendrampup (env regeneration)
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            https://api.github.com/repos/geresvb/backendrampup/dispatches \
            -d "{\"event_type\":\"update-env\",\"client_payload\":{\"public_ip\":\"${{ steps.tf_output.outputs.public_ip }}\"}}"

            
      - name: Trigger workflow in frontendrampup (env regeneration)
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GH_TOKEN }}" \
            https://api.github.com/repos/geresvb/frontendrampup/dispatches \
            -d "{\"event_type\":\"update-env\",\"client_payload\":{\"public_ip\":\"${{ steps.tf_output.outputs.public_ip }}\"}}"


      - name: Terraform Plan
        run: terraform plan -out=tfplan2
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_db_ssh_public_key: "${{ secrets.DB_SSH_PUBLIC_KEY }}"
          TF_VAR_backend_ssh_public_key: "${{ secrets.BACKEND_SSH_PUBLIC_KEY }}"
          TF_VAR_frontend_ssh_public_key: "${{ secrets.FRONTEND_SSH_PUBLIC_KEY }}"
          TF_VAR_management_ssh_public_key: "${{ secrets.MANAGEMENT_SSH_PUBLIC_KEY }}"
          
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan2
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
          TF_VAR_db_ssh_public_key: "${{ secrets.DB_SSH_PUBLIC_KEY }}"
          TF_VAR_backend_ssh_public_key: "${{ secrets.BACKEND_SSH_PUBLIC_KEY }}"
          TF_VAR_frontend_ssh_public_key: "${{ secrets.FRONTEND_SSH_PUBLIC_KEY }}"
          TF_VAR_management_ssh_public_key: "${{ secrets.MANAGEMENT_SSH_PUBLIC_KEY }}"

      - name: Terraform Output
        run: terraform output
        env:
          ARM_CLIENT_ID: ${{ secrets.ARM_CLIENT_ID }}
          ARM_CLIENT_SECRET: ${{ secrets.ARM_CLIENT_SECRET }}
          ARM_SUBSCRIPTION_ID: ${{ secrets.ARM_SUBSCRIPTION_ID }}
          ARM_TENANT_ID: ${{ secrets.ARM_TENANT_ID }}
